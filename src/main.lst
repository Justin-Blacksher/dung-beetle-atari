mads 2.1.7 build 21 (20 May 24)
Source: main.asm
     1 				; Evil Dung Beetle
     2 				; Assemble in MADS: mads -l -t main.asm
     3 				; ATASCII Table: https://www.atariwiki.org/wiki/attach/Atari%20ATASCII%20Table/ascii_atascii_table.pdf
     4 				; ATASCII 0-31 Screen code 64-95
     5 				; ATASCII 32-95 Screen code 0-63
     6 				; ATASCII 96-127 Screen code 96-127
     7
     8 				; NTSC Color Palette: https://atariage.com/forums/uploads/monthly_10_2015/post-6369-0-47505700-1443889945.png
     9 				; PAL Color Palette: https://atariage.com/forums/uploads/monthly_10_2015/post-6369-0-90255700-1443889950.png
    10
    11
    12 				    org $2000
    13
    14 				    icl '../lib/hardware.asm'
Source: hardware.asm
     1 				; Hardware File
     2 = 0230			SDLSTL = $0230              ; Display list starting address
     3 = 02F4			CHBAS = $02f4               ; Character Base Register
     4 				; colors
     5 = 02C4			COLOR0 = $02c4              ; Color for %01
     6 = 02C5			COLOR1 = $02c5              ; Color for %10
     7 = 02C6			COLOR2 = $02c6              ; Color for %11
     8 = 02C7			COLOR3 = $02c7              ; Color for %11 (inverse)
     9 = 02C8			COLOR4 = $02c8              ; Color for %00 (Background)
    15
    16 = 3C00			charset = $3c00             ; Character set
    17 = 4000			screen = $4000              ; Screen buffer
    18 = 0070			blank8 = $70                ; 8 blank lines
    19
    20 FFFF> 2000-207E> 20 19 +     setup_screen()          ; Sets up the Screen
    21 2003 20 38 20		    setup_colors()          ; Sets up the colors
    22 2006 20 52 20		    load_gfx()
    23
    24
    25 2009 A0 00		    ldy #0
    26
    27 200B			loop2
    28 200B B9 65 20 99 00 40	    mva scene,y screen,y
    29 2011 C8			    iny
    30 2012 C0 0C		    cpy #12
    31 2014 D0 F5		    bne loop2
    32
    33 2016 4C 16 20		    jmp *
    34
    35 2019			    icl '../lib/dlist.asm'
Source: dlist.asm
     1
     2 				; Load Display List
     3 2019			.proc setup_screen
     4 = 0040			lms = $40                   ; Load memory scan
     5 = 0041			jvb = $41                   ; Jump while vertical blank
     6 				; Antic Modes
     7 = 0002			antic2 = 2                  ; Antic mode 2
     8 = 0003			antic3 = 3                  ; Antic mode 3
     9 = 0004			antic4 = 4                  ; Antic mode 4
    10 = 0005			antic5 = 5                  ; Antic mode 5
    11 = 0006			antic6 = 6                  ; Antic mode 6
    12 = 0007			antic7 = 7                  ; Antic mode 7
    13 2019 A9 24 8D 30 02 A9 +     mwa #dlist SDLSTL
    14 2023 60			    rts
    15 				; Display list
    16 2024			dlist
    17 2024 70 70 70		    .byte blank8, blank8, blank8
    18 2027 45 00 40		    .byte antic5 + lms, <screen, >screen
    19 202A 05 05 05 05 05 05	    .byte antic5, antic5, antic5, antic5, antic5, antic5
    20 2030 05 05 05 05 05	    .byte antic5, antic5, antic5, antic5, antic5
    21 2035 41 24 20		    .byte jvb, <dlist, >dlist
    22 				    .endp
    36
    37 				; Change colors
    38 				;-------------------------------------------------------
    39 				; Proc: setup_colors
    40 				; Sets up the colors for the game
    41 				;-------------------------------------------------------
    42 2038			.proc setup_colors
    43 				; Color Pallett
    44 = 0000			bg_black = $00                          ; 00 Black
    45 = 00F2			poop_brown = $f2                        ; f2 Brown
    46 = 00F4			poop_peanut = $f4                       ; f4 yellow-brown
    47 = 00B2			green_grass = $b2                       ; b2 Green
    48 = 0084			blue_water = $84                        ; 84 Blue 
    49 2038 A9 F2 8D C4 02	    mva #poop_brown COLOR0              ; 01
    50 203D A9 F4 8D C5 02	    mva #poop_peanut COLOR1             ; 10
    51 2042 A9 B2 8D C6 02	    mva #green_grass COLOR2             ; 11
    52 2047 A9 84 8D C7 02	    mva #blue_water COLOR3              ; 11 (reverse)
    53 204C A9 00 8D C8 02	    mva #bg_black COLOR4                ; 00 
    54 2051 60			    rts
    55 				    .endp
    56
    57 				    ;-------------------------------------------------------
    58 				; Proc: load_gfx
    59 				; Loads the graphics for the game
    60 				;-------------------------------------------------------
    61 2052			.proc load_gfx
    62 				    ; Set up the character set
    63 2052 A9 3C 8D F4 02	    mva #>charset CHBAS
    64 				    
    65 2057 A2 00		    ldx #0
    66 2059			loop
    67
    68 2059 BD 6F 20 9D 08 3C	    mva chars,x charset+8,x
    69 205F E8			    inx
    70 2060 E0 10		    cpx #16
    71 2062 D0 F5		    bne loop
    72 2064 60			    rts 
    73 				    .endp
    74
    75 2065			scene
    76 2065 01 02 01 02 01 02 +     .byte 1,2,1,2,1,2,1,2,1,2
    77
    78
    79 206F			chars
    80
    81 206F AA			    .byte %10101010
    82 2070 A5				.byte %10100101
    83 2071 55				.byte %01010101
    84 2072 00				.byte %00000000
    85 2073 52				.byte %01010010
    86 2074 52				.byte %01010010
    87 2075 52				.byte %01010010
    88 2076 00				.byte %00000000
    89 					
    90 2077 4A				.byte %01001010
    91 2078 4A				.byte %01001010
    92 2079 09				.byte %00001001
    93 207A 00				.byte %00000000
    94 207B A9				.byte %10101001
    95 207C 95				.byte %10010101
    96 207D 55				.byte %01010101
    97 207E 00				.byte %00000000
